{"version":3,"sources":["albumApi.js"],"names":["_react","require","albumsApi","createApi","reducerPath","fetchBaseQuery","baseUrl","endpoints","builder","query","user","url","params","userId","id","useFetchAlbumsQuery"],"mappings":"yHAAA,IAAAA,OAAAC,QAAA,gCAEMC,WAAY,EAAAF,OAAAG,WAAU,CACxBC,YAAa,SACbC,gBAAgB,EAAAL,OAAAK,gBAAe,CAC3BC,QAAS,0BALjBC,UAE4B,SAF5BC,GAQQ,MAAO,CANTN,YAAYM,EAAAC,MAAU,CACXA,MADW,SAAAC,GAER,MAAA,CACHC,IAAA,WAHWC,OAAA,CAAAC,OAKdL,EAASM,IAEEN,OAAA,4CAkBbO,0BAQGA,oBAAwBb,UAAxBa","file":"albumApi.min.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst albumsApi = createApi({\r\n    reducerPath: \"albums\",\r\n    fetchBaseQuery: fetchBaseQuery({\r\n        baseUrl: \"http://localhost:3005\",\r\n    }),\r\n    endpoints(builder) {\r\n        return {\r\n            fetchAlbums: builder.query({\r\n                query: (user) => {\r\n                    return {\r\n                        url: \"./albums\",\r\n                        params: {\r\n                            userId: user.id,\r\n                        },\r\n                        method: 'GET',\r\n                    };\r\n                }\r\n            }),\r\n            // createAlbum: builder.mutation({\r\n            //     query: (userId) => {\r\n            //         return {\r\n            //             url: \"./albums\",\r\n            //             method: 'POST',\r\n            //             body: {title, userId}\r\n            //         };\r\n            //     }\r\n            // }),\r\n        };\r\n    }\r\n});\r\n\r\nalbumsApi.useFetchAlbumsQuery();\r\n\r\nexport const { useFetchAlbumsQuery } = albumsApi;\r\nexport { albumsApi };"]}